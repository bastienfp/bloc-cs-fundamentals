Short Answers
1. What is a real-life scenario that uses linear search?

Answer: searching a letter in a name

2. What is a real-life scenario that uses binary search?

Answer: Searching an author in the library

3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

Answer:
7 iterations

4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

Answer:
3 iterations

5. Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

Answer:
A linear search runtime would be O(n)
A binary search runtime would be O(log n) but it only works on a sorted collection so we would need to first organize the collection before applying the binary search algorithm. Several sorting algorithms can get to O(n log n) or even close to O(n) depending the cases.

Therefore even though the collection is unsorted given the amount of items (a million) I'd rather use a binary search combined with a sorting algorithm.

If the collection has a lot less items I would use a linear search instead.

6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

Answer:
Since the collection is already sorted, I would use a binary search as it is a lot more efficient with a time complexity of O(log n) compared to O(n) for the linear search algorithm.


Programming Assignments:
1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.

Answer:
````js
let dictionnary = ["Albatross", "Bunny", "Cat", "Dog", "Elephant", "Fowl", "Gorilla", "Hedgehog", "Insect"]

function binarySearch(arr, word) {
  let low = 0;
  let high = arr.length;
  
  while (low <= high){
   let mid = (low + high) / 2;
   mid = Math.round(mid);
   
   if(arr[mid] > word){
     high = mid - 1;
   } else if(arr[mid] < word){
     low = mid + 1;
   } else {
     return arr[mid];
   }
  }
  
  return ("Not found");
}
````

2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.

Answer:
````js
let fishTank = ["tuna", "salmon", "yellowtail", "mahi-mahi", "goldfish", "turtle", "white-spotted goldfish"]

function linearSearch(arr, targetFish) {
  for(var i=0; i < arr.length; i++){
    if(arr[i] === targetFish){
      return "You've caught your target! It's a " + arr[i];
    }
  }
  return "Your target fish is not the tank :(";
}

console.log(linearSearch(fishTank, "white-spotted goldfish"));
````